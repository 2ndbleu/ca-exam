                                            # ~30   *16
80000000 <_start>:
80000000:   lui     sp, 0x80020             # ~1
80000004:   li      a0, n
80000008:   jal     ra, 80000010 <f>        # ~3 <- 2 cycle penalty (~5)

80000010 <f>:                               ## a0 = n..2
80000010:   push    ra                      # *1
80000014:   push    s0
80000018:   mv      s0, a0
8000001c:   li      a5, 1
80000020:   bne     a0, a5, 80000034 <L2>   # *5 <- 2 cycle penalty for a0=n (~7)

80000034 <L2>:
80000034:   addi    a0, a0, -1              # *6
80000038:   jal     ra, 80000010 <f>        # *7 <- 2 cycle penalty for a0=n-1 (~9)

80000010 <f>:                               ## a0 = 1
80000010:   push    ra                      # ~10
80000014:   push    s0
80000018:   mv      s0, a0
8000001c:   li      a5, 1
80000020:   bne     a0, a5, 80000034 <L2>   # ~14 <- 2 cycle penalty (~16)

80000024 <L1>:
80000024:   mv      a0, s0                  # ~17
80000028:   pop     s0
8000002c:   pop     ra                      # ~19 <- 1 cycle stall (~20)
80000030:   ret                             # ~21 <- 2 cycle penalty (~23)

8000003c:   add     s0, s0, a0              ## s0 = 2..n
80000040:   j       80000024 <L1>           # *9 <- 2 cycle penalty for a0=1 (~25)

80000024 <L1>:
80000024:   mv      a0, s0                  # *10
80000028:   pop     s0
8000002c:   pop     ra                      # *12 <- 1 cycle stall (*13)
80000030:   ret                             # *14 <- 2 cycle penalty (*16)

8000000c:   ebreak                          # ~26 <- 4 cycle for ID..WB (~30)

C(n) = 16(n-1) + 30 = 16n + 14
